# 제품 요구사항 문서: 예약 및 관리자 변경 로그 기능

## 1. 개요

현재 시스템에서는 사용자가 예약을 취소하거나 관리자가 '수퍼예약' 페이지를 통해 예약을 변경할 경우, 해당 작업에 대한 기록이 남지 않아 누가 어떤 예약을 취소하거나 변경했는지 추적하기 어렵습니다. 이 문서에서는 이러한 문제를 해결하기 위해 예약 취소 및 관리자 변경 이력을 기록하고 관리자가 이를 조회하고 검색할 수 있는 로그 기능을 정의합니다.

## 2. 목표

- 예약 취소 및 관리자 변경 작업에 대한 투명성 확보
- 문제 발생 시 작업 이력을 통한 원인 분석 및 디버깅 용이성 향상
- 관리자가 모든 예약 관련 변경 사항을 한곳에서 확인하고 검색할 수 있는 기능 제공
- 사용자 문의 시 빠른 대응을 위한 이력 추적 기능 제공

## 3. 범위

- 사용자 예약 취소 이벤트 로깅
- 관리자의 '수퍼예약' 페이지를 통한 예약 생성, 변경, 삭제 이벤트 로깅
- 별도의 로그 테이블에 관련 정보 저장 (사용자/관리자 ID, 작업 종류, 작업 시간, 변경된 예약 정보 등)
- 관리자 페이지 내 로그 조회 및 검색 기능 추가
- 로그 데이터 내보내기 기능 (CSV, Excel 등)

## 4. 기능 요구사항

### 4.1 로깅 대상 이벤트
- **사용자 예약 취소**: 사용자가 본인의 예약을 취소하는 경우
- **관리자 예약 생성**: 관리자가 수퍼예약 페이지에서 새 예약을 생성하는 경우
- **관리자 예약 변경**: 관리자가 기존 예약의 시간, 날짜, 내용 등을 수정하는 경우
- **관리자 예약 삭제**: 관리자가 기존 예약을 삭제하는 경우

### 4.2 로깅 정보
- 사용자가 예약을 취소할 때 다음 정보가 로그 테이블에 기록되어야 한다:
    - 취소한 사용자 ID 및 사용자명
    - 취소된 예약의 고유 ID
    - 취소 시점 (타임스탬프)
    - 취소된 예약 정보 (날짜, 시간, 서비스 종류 등)
    - 취소 사유 (선택사항)
    - 클라이언트 IP 주소
- 관리자가 '수퍼예약' 페이지에서 예약을 생성, 변경, 삭제할 때 다음 정보가 로그 테이블에 기록되어야 한다:
    - 작업을 수행한 관리자 ID 및 관리자명
    - 작업 종류 (생성, 변경, 삭제)
    - 작업 시점 (타임스탬프)
    - 작업 대상 예약의 고유 ID
    - (변경/삭제 시) 변경 전 예약 정보의 전체 스냅샷
    - (생성/변경 시) 변경 후 예약 정보의 전체 스냅샷
    - 변경 사유 또는 메모 (선택사항)
    - 클라이언트 IP 주소

### 4.3 로그 조회 및 검색
- 관리자는 별도의 '로그 페이지'에서 모든 예약 관련 로그 기록을 조회할 수 있어야 한다.
- 로그 목록은 최신순으로 정렬되어야 한다.
- 관리자는 다음 기준으로 로그를 검색할 수 있어야 한다:
    - 사용자/관리자 ID 또는 이름
    - 작업 종류 (취소, 생성, 변경, 삭제)
    - 날짜/시간 범위 (시작일~종료일)
    - 예약 ID
    - IP 주소
- 검색 결과는 페이징 처리되어야 한다 (페이지당 50개 항목).
- 각 로그 항목은 발생 시간, 작업자, 작업 종류, 대상 예약 정보를 명확하게 보여주어야 한다.
- 로그 상세 보기 기능으로 변경 전후 정보를 비교할 수 있어야 한다.

### 4.4 데이터 내보내기
- 관리자는 검색된 로그 결과를 CSV 또는 Excel 파일로 내보낼 수 있어야 한다.
- 내보내기 시 개인정보 보호를 위해 민감한 정보는 마스킹 처리한다.

## 5. 데이터베이스 설계

### 5.1 로그 테이블 구조 (reservation_logs)
- id: 로그 고유 ID (Primary Key)
- action_type: 작업 종류 (ENUM: 'cancel', 'create', 'update', 'delete')
- actor_id: 작업자 ID (사용자 또는 관리자)
- actor_name: 작업자 이름
- actor_type: 작업자 유형 (ENUM: 'user', 'admin')
- reservation_id: 대상 예약 ID
- before_data: 변경 전 예약 정보 (JSON)
- after_data: 변경 후 예약 정보 (JSON)
- reason: 변경 사유 또는 메모 (TEXT, nullable)
- ip_address: 클라이언트 IP 주소
- created_at: 로그 생성 시간
- user_agent: 사용자 브라우저 정보 (선택사항)

### 5.2 인덱스
- actor_id에 대한 인덱스
- reservation_id에 대한 인덱스
- action_type에 대한 인덱스
- created_at에 대한 인덱스 (시간 범위 검색용)

## 6. 기술 고려사항

- 데이터베이스에 로그 저장을 위한 새로운 테이블 설계 및 마이그레이션
- 예약 취소 및 관리자 예약 변경/삭제 로직에 로그 기록 기능 추가
- 관리자 페이지에 로그 조회 및 검색 기능을 위한 API 및 UI 개발
- 로그 데이터의 보관 정책 (예: 2년 후 자동 아카이빙)
- 대용량 로그 데이터 처리를 위한 성능 최적화
- 개인정보 보호를 위한 데이터 마스킹 및 접근 권한 관리

## 7. 보안 및 개인정보 보호

- 로그 조회는 관리자 권한을 가진 사용자만 가능
- 개인정보가 포함된 로그 데이터는 암호화 저장
- 로그 접근 이력도 별도로 기록 (감사 로그)
- 데이터 내보내기 시 개인정보 마스킹 처리

## 8. 성능 요구사항

- 로그 기록은 기존 예약 처리 성능에 영향을 주지 않아야 함 (비동기 처리 권장)
- 로그 조회 페이지는 3초 이내에 로딩되어야 함
- 대용량 검색 결과도 5초 이내에 첫 페이지가 표시되어야 함

## 9. 사용자 인터페이스 요구사항

- 로그 페이지는 관리자 메뉴에 "예약 로그" 항목으로 추가
- 직관적인 검색 필터 UI 제공
- 로그 항목별 상세 보기 모달 또는 페이지
- 변경 전후 데이터 비교 화면
- 반응형 디자인으로 모바일에서도 사용 가능

## 10. 테스트 시나리오

- 사용자 예약 취소 시 로그 정상 기록 확인
- 관리자 예약 생성/변경/삭제 시 로그 정상 기록 확인
- 로그 검색 기능 정상 동작 확인
- 대용량 로그 데이터에서의 성능 테스트
- 권한이 없는 사용자의 로그 접근 차단 확인 